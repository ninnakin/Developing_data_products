setwd("~/Coursera/Shiny tutorials/cencus-app")
shiny::runApp()
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
l=5
to.string(l)
as.string(l)
as.character(l)
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
shiny::runApp('~/Coursera/DevelopingDataProducts')
text="ni talar bra latin"
length(text)
size(text)
nchar(text)
text
text[1]
text[2]
strsplit(text)
strsplit(text, split=" ")
substring(text, seq(1,nchar(text),2), seq(2,nchar(text),2))
substring(text, seq(1,nchar(text),1), seq(2,nchar(text),1))
substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1))
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
vector_text[1]
vector_text[2]
vector_text
?gsub
text <- gsub(" ","",text)
text
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(vector_text)
n <- nchar(text)
vector_text[n]
n/2
floor(n/2)
vector_text[i]==vector_text[n+1-i]
i=1
vector_text[i]==vector_text[n+1-i]
for(i in 1:floor(n/2)){
vector_text[i]==vector_text[n+1-i]
}
similar <- vector_text[i]==vector_text[n+1-i]
similar
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
similar
min(similar)
if(min(similar)==0) "not a palindrom"
if(min(similar)==0) "not a palindrom"
else "this is a palindrom
if(min(similar)==0) "not a palindrom" else "this is a palindrom"
text="ni talar bra latin"
# remove blanks
text <- gsub(" ","",text)
text <- tolower(text)
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
if(min(similar)==0) "not a palindrom" else "this is a palindrom"
text="hej svejs"
# remove blanks
text <- gsub(" ","",text)
text <- tolower(text)
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
if(min(similar)==0) "not a palindrom" else "this is a palindrom"
identify_palindrom <- function(text){
# remove blanks
text <- gsub(" ","",text)
text <- tolower(text)
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
if(min(similar)==0) "not a palindrom" else "this is a palindrom"
}
identify_palindrom <- function(text){
# remove blanks
text <- gsub(" ","",text)
text <- tolower(text)
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
if(min(similar)==0) outText <- "not a palindrom" else outText <- "this is a palindrom"
}
identify_palindrom("ni talar bra latin")
outText
a<-identify_palindrom("ni talar bra latin")
a
a<-identify_palindrom("sirap paris")
a
a<-identify_palindrom("abba")
a
a<-identify_palindrom("ab ba")
a
a<-identify_palindrom("aa")
a
a<-identify_palindrom("a a")
a
a<-identify_palindrom("a")
a
text="abba"
text <- gsub(" ","",text)
text <- tolower(text)
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
i=1
floor(n/2)
n+1-i
similar[i] <- vector_text[i]==vector_text[n+1-i]
similar
similar=""
rm(similar)
similar[i] <- vector_text[i]==vector_text[n+1-i]
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
similar <- list[floor(n/2)]
floor(n/2)
list(2)
list
vector(1,2)
vector(2)
vector(lenth=2)
vector(length=2)
similar <- vector(length=floor(n/2))
similar
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
similar
a<-identify_palindrom("a")
a
a
a<-identify_palindrom("abba")
a
a<-identify_palindrom("abbas")
a
a<-identify_palindrom("aba")
a
n=1
n/2
floor(n/2)
similar=""
a<-identify_palindrom("a")
a
a<-identify_palindrom("T")
a
a<-identify_palindrom("Tut")
a
source(helper)
setwd("~/Coursera/DevelopingDataProducts")
source("helper.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
if(min(similar)==0) "not a palindrom" else "this is a palindrom"
identify_palindrom("ni talar bra latin")
a<-identify_palindrom("ni talar bra latin")
a
outText
outText=""
identify_palindrom <- function(text){
# remove blanks
text <- gsub(" ","",text)
text <- tolower(text)
# split text into character evctor
vector_text <- substring(text, seq(1,nchar(text),1), seq(1,nchar(text),1));
n <- nchar(text)
similar <- vector(length=floor(n/2))
# compare fist to last character etc.
for(i in 1:floor(n/2)){
similar[i] <- vector_text[i]==vector_text[n+1-i]
}
outText=""
if(min(similar)==0) outText <- "not a palindrom" else outText <-"this is a palindrom"
outText
}
identify_palindrom("ni talar bra latin")
identify_palindrom("ni talar bra lati")
identify_palindrom("na")
identify_palindrom("a")
shiny::runApp()
identify_palindrom("")
shiny::runApp()
gsub("[^[:alnum:]]", "", text)
text <- "Ni talar bra latin!"
gsub("[^[:alnum:]]", "", text)
source('~/Coursera/DevelopingDataProducts/helper.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
identify_palindrom("")
identify_palindrom("ni talar bta")
identify_palindrom("ni talar bra")
identify_palindrom("nitalarbralatin")
text<-"ni talar bra latin"
identify_palindrom(text)
source('~/Coursera/DevelopingDataProducts/helper.R')
shiny::runApp()
